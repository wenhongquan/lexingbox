//
//  SettingTableController.swift
//  LIC
//
//  Created by 温红权 on 15/3/13.
//  Copyright (c) 2015年 &#20048;&#34892;&#22825;&#19979;. All rights reserved.
//

import UIKit
//import ObjectMapper

class SettingTableController: BaseTableController  {
    
    @IBOutlet var table: UITableView!
    
    @IBOutlet weak var usercount: UITableViewCell!
    
    @IBOutlet weak var usercountLable: UILabel!
    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        
        CommonUtil.setNavigationControllerBackground(self)
        
        var rightbar = UIBarButtonItem(image: UIImage(named: "customer_service"), style: UIBarButtonItemStyle.Plain, target: self, action: "customerService")
        
       rightbar.imageInsets = UIEdgeInsets(top: 0, left: -7, bottom: 0, right: 7)
        

        
        self.navigationItem.setRightBarButtonItem(rightbar, animated: false)
        
        self.navigationItem.rightBarButtonItem?.tintColor = UIColor.whiteColor()
        
        
        usercount.selectionStyle = UITableViewCellSelectionStyle.None
        usercountLable.text = Cache.USER.phone
        
//        var button = UIButton();
//        var img = UIImage(named: "customer_service")
//        button.frame = CGRect(x: 0, y: 0, width: img?.size.width, height: img?.size.height )
//        button.setImage(img, forState: UIControlState.Normal)
//        button.addTarget(self, action: "customerService", forControlEvents: UIControlEvents.TouchUpInside)
//        button.contentEdgeInsets = UIEdgeInsets(top: <#CGFloat#>, left: <#CGFloat#>, bottom: <#CGFloat#>, right: <#CGFloat#>)
//        var rightbar = UIBarButtonItem(customView: button)
        
    }
    
    override func tableView(tableView: UITableView, heightForHeaderInSection section: Int) -> CGFloat {
        if(section == 0){
          return 15
        }else if(section == 3){
           return 30
        }else{
           return 10
        }
    }
    

    func customerService(){
        
        CommonUtil.alertCustomService(self)
    }
    
   
        
    override func viewWillAppear(animated: Bool) {
        super.viewWillAppear(animated)
        
        
        
        self.navigationItem.backBarButtonItem =  nil
        
    }
    
    
    
    
    override func webSocketMessageHandler(message: String) {
        if(message.contains("msg")){
            var data:JSON = JSON(data:(message as NSString).dataUsingEncoding(NSUTF8StringEncoding)! )
            
            CommonUtil.GCDThread({()in
                //这里写需要放到子线程做的耗时的代码
                CommonUtil.getevents()
                
                }, afterdo:  nil)
            
            
        }
    }
    
    
    
    
    
    
    
    override func tableView(tableView: UITableView, didSelectRowAtIndexPath indexPath: NSIndexPath) {
        
        switch(indexPath.section){
            
        case 0:
            //修改密码
            if( indexPath.row == 1 ) {
                
                  CommonUtil.navToView(self, name: "repasswordviewController")
            }
            break
            
        case 1:
            //伴随效果
            CommonUtil.navToView(self, name: "effectTableController")
           break
            
        case 2:
            
            switch indexPath.row {
            // 关于乐行宝
            case 2:
                 CommonUtil.navToView(self, name: "aboutviewcontroller")
                break
                
            case 1:
               
                    
                    var sb = UIStoryboard(name: "Main", bundle:nil)
                    
                    var vc = sb.instantiateViewControllerWithIdentifier("ebickBrandAddTableController") as!  EbickBrandAddTableController
                    
                    vc.hidesBottomBarWhenPushed = true
                    
                    CommonUtil.transitionWithType(kCATransitionMoveIn, withSubType: kCATransitionFromTop, forView: self.view.window!)
                    self.navigationController?.pushViewController(vc, animated: false)
                

                break
            // 离线地图
            case 0:
                CommonUtil.navToView(self, name: "offlineMapTab")
                break
            default: break
            }
            
            break
        case 3:
            //退出
            if( indexPath.row == 0 ) {
                
                if (UIDevice.currentDevice().userInterfaceIdiom == .Phone) {
                    
                   if ((UIDevice.currentDevice().systemVersion as NSString).doubleValue >= 8.0)  {
                    
                    let shareMenu = UIAlertController(title: nil, message: "退出后不会删除任何历史数据，下次登录依然可以使用本账号。", preferredStyle: .ActionSheet)
                    
                    let loginout = UIAlertAction(title: "退出登录", style: .Destructive ) { (_) in
                        
                        self.loginout()
                        
                    }
                    let cancelAction = UIAlertAction(title: "取消", style: .Cancel) { (_) in }
                    
                    shareMenu.addAction(loginout)
                    shareMenu.addAction(cancelAction)
                    
                    shareMenu.view.tintColor=UIColor.darkGrayColor()
                    
                    
                    self.presentViewController(shareMenu, animated: true, completion: nil)
                    
                   
                   }else{
                    

                    let shareMenu = UIActionSheetExt(title: "退出后不会删除任何历史数据，下次登录依然可以使用本账号。", delegate: IosActionSheetDegetel.sharedIosActionSheetDegetel, cancelButtonTitle: "取消", destructiveButtonTitle: "退出登录")
                    
                    shareMenu.tag = StatusCode.ActionSheetSC.LOGINOUT
                    
                    shareMenu.handles?.append({()in
                        self.loginout()
                    })
                    
                    shareMenu.showFromTabBar(self.tabBarController?.tabBar)
                    
                    
                    
                    }
                    
                    
                
                
                }else {
  
                    CommonUtil.alertView(self, title: "", message: "退出后不会删除任何历史数据，下次登录依然可以使用本账号。", buttons: [AlertHandler(title: "确定", handle: { () -> Void in
                         self.loginout()

                    }),AlertHandler(title: "取消", handle: {})])

                    
                    
                    
                }
                
                
                
                
                var timer = NSTimer.scheduledTimerWithTimeInterval(0.1, target: self, selector: Selector("unselectCurrentRow"), userInfo: nil, repeats: false)
            }
            break

         default :
            break
        }
        
        
        
        
    }
    
 
 
    
    
    
    
    func unselectCurrentRow(){
        self.tableView.deselectRowAtIndexPath(self.tableView.indexPathForSelectedRow()!,animated:true);
        
    }
    
    func loginout(){
    
        Cache.USER.isloginout = true
        
        //缓存用户
        CommonUtil.saveWithNSUserDefaults(Mapper().toJSON(Cache.USER), key: "USER")
        
        WebSocketUtil.sharedWebSocket.disConnection()
        BaseString.USERPHONE = Cache.USER.phone
        
        UIApplication.sharedApplication().applicationIconBadgeNumber = 0
        
        CommonUtil.GCDThread({()in
            UserService.sharedUserService.LoginOut({(data)in}, errorHandler: {(data)in})
            
            }, afterdo: nil)
        
        self.backLaunch()

    
    }
    
    
    func backLaunch(){
        
        CommonUtil.backToView(self, name: "navlogin", type:kCATransitionMoveIn, subtype: kCATransitionFromTop)
        
        return
        
        
    }

    
    
    
    
    
}
